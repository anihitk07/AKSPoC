apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  minReadySeconds: 1
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
    spec:
      terminationGracePeriodSeconds: 50
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: {{ .Values.container.requests.cpu }}
            memory: {{ .Values.container.requests.memory }}
          limits:
            cpu: {{ .Values.container.limits.cpu }}
            memory: {{ .Values.container.limits.memory }}
        env:
          - name: ASPNETCORE_ENVIRONMENT
            value: {{ .Values.environment.name }}
        readinessProbe:
          httpGet:
            path: /aks-api/ready
            port: 80
            scheme: HTTP	
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 2
          failureThreshold: 10
          successThreshold: 1
        livenessProbe:
          httpGet:
            path: /aks-api/healthz
            port: 80
            scheme: HTTP	
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 10
          successThreshold: 1
      nodeSelector:
        poolname: tcsdemoapione